#!/bin/bash
# conda_unpack_helper
# Script to unpack a specific environment into a target directory

usage()
{
cat << EOF
Usage: $0 -s SOURCE_TAR -u UNPACK_DIR [-d] [-h]

Unpack a packed conda env to a specific directory.
Uses the conda-pack utility.
Does not require a python environment active.

Options:
-s SOURCE_TAR:  The packed tarball
-u UNPACK_DIR:  The directory to deploy to
-d :            Dry-run, do not move any files around
-h :            Show usage

Example:
$0 -s my_env.tar.gz -u /u1/conda
This will create /u1/conda/my_env, which will be a working python env
that can be activated using /u1/conda/my_env/bin/activate.
EOF
}
set -e

CMD=''

while getopts 's:u:dh' OPTION; do
  case "${OPTION}" in
    s)
      SOURCE_TAR="${OPTARG}"
      ;;
    u)
      UNPACK_DIR="${OPTARG}"
      ;;
    d)
      DRY="DRY"
      CMD="echo dry-run:"
      ;;
    h)
      usage
      exit 0
      ;;
    ?)
      usage
      exit 1
      ;;
  esac
done

if [ -z "${SOURCE_TAR}" ] || [ -z "${UNPACK_DIR}" ]; then
  usage
  exit 1
fi

ACTIVATE="${UNPACK_DIR}/bin/activate"
DEACTIVATE="${UNPACK_DIR}/bin/deactivate"

if [ -f "${UNPACK_DIR}" ]; then
  echo "${UNPACK_DIR} already exists. Aborting."
  exit 1
fi

UNPACK_PARENT="$(dirname ${UNPACK_DIR})"

if [ -z "${DRY}" ] && [ ! -d "${UNPACK_PARENT}" ]; then
  echo "${UNPACK_PARENT} directory does not exist. Aborting."
  exit 1
fi

if [ ! -f "${SOURCE_TAR}" ]; then
  echo "Could not find ${SOURCE_TAR}. Aborting."
  exit 1
fi

echo "Creating ${UNPACK_DIR}"
$CMD mkdir "${UNPACK_DIR}"
echo "Untarring ${SOURCE_TAR} into ${UNPACK_DIR}"
$CMD tar -xzf "${SOURCE_TAR}" -C "${UNPACK_DIR}"

if [ -z "${DRY}" ] && [ ! -f "${ACTIVATE}" ]; then
  echo "Could not find ${ACTIVATE}, something went wrong"
  echo "Aborting"
  exit 1
fi

echo "Unpacking conda environment"
$CMD source "${ACTIVATE}"
$CMD conda-unpack
$CMD source "${DEACTIVATE}"
echo "Done!"
